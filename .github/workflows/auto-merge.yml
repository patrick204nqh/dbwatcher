name: Auto-merge Dependabot PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.draft == false &&
      (
        github.actor == 'dependabot[bot]' ||
        contains(github.event.pull_request.labels.*.name, 'auto-merge-candidate')
      )

    steps:
      - name: Check if PR is ready for auto-merge
        id: check
        run: |
          # Check if this is a safe dependency update
          if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            # Parse dependabot PR title to determine update type
            TITLE="${{ github.event.pull_request.title }}"

            # Extract dependency info from title format: "Bump gem-name from x.y.z to a.b.c"
            if echo "$TITLE" | grep -qE "Bump.*from.*to"; then
              # Check if it's a patch or minor update (safer for auto-merge)
              if echo "$TITLE" | grep -qE "(patch|security)" ||
                 echo "$TITLE" | grep -qE "from [0-9]+\.[0-9]+\.[0-9]+ to [0-9]+\.[0-9]+\.[0-9]+$"; then
                echo "safe_update=true" >> $GITHUB_OUTPUT
                echo "reason=patch_or_security" >> $GITHUB_OUTPUT
              elif echo "$TITLE" | grep -qE "from [0-9]+\.[0-9]+\.[0-9]+ to [0-9]+\.[0-9]+\.[0-9]+"; then
                # Minor version update - still relatively safe for dev dependencies
                if echo "$TITLE" | grep -qE "(rspec|rubocop|rake|cucumber|yard|pry)"; then
                  echo "safe_update=true" >> $GITHUB_OUTPUT
                  echo "reason=dev_dependency_minor" >> $GITHUB_OUTPUT
                else
                  echo "safe_update=false" >> $GITHUB_OUTPUT
                  echo "reason=production_minor_update" >> $GITHUB_OUTPUT
                fi
              else
                echo "safe_update=false" >> $GITHUB_OUTPUT
                echo "reason=major_update" >> $GITHUB_OUTPUT
              fi
            else
              echo "safe_update=false" >> $GITHUB_OUTPUT
              echo "reason=unknown_format" >> $GITHUB_OUTPUT
            fi
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'auto-merge-candidate') }}" == "true" ]]; then
            echo "safe_update=true" >> $GITHUB_OUTPUT
            echo "reason=manual_label" >> $GITHUB_OUTPUT
          else
            echo "safe_update=false" >> $GITHUB_OUTPUT
            echo "reason=not_eligible" >> $GITHUB_OUTPUT
          fi

      - name: Wait for CI checks
        if: steps.check.outputs.safe_update == 'true'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Test Suite'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success

      - name: Wait for quality checks
        if: steps.check.outputs.safe_update == 'true'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Code Quality'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success

      - name: Wait for security checks
        if: steps.check.outputs.safe_update == 'true'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Security Scan'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success

      - name: Wait for compatibility checks
        if: steps.check.outputs.safe_update == 'true'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Compatibility Check'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success

      - name: Auto-approve dependabot PRs
        if: steps.check.outputs.safe_update == 'true' && github.actor == 'dependabot[bot]'
        run: |
          gh pr review "${{ github.event.pull_request.number }}" --approve --body "Auto-approved safe dependency update (${{ steps.check.outputs.reason }})"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: steps.check.outputs.safe_update == 'true'
        run: |
          gh pr merge "${{ github.event.pull_request.number }}" --auto --squash --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment for rejected auto-merge
        if: steps.check.outputs.safe_update == 'false'
        run: |
          REASON="${{ steps.check.outputs.reason }}"
          case $REASON in
            "major_update")
              MESSAGE="üö´ Auto-merge skipped: Major version updates require manual review for breaking changes."
              ;;
            "production_minor_update")
              MESSAGE="‚ö†Ô∏è Auto-merge skipped: Production dependency minor updates require manual review."
              ;;
            "unknown_format")
              MESSAGE="‚ùì Auto-merge skipped: Unable to determine update type from PR title."
              ;;
            *)
              MESSAGE="‚ÑπÔ∏è Auto-merge skipped: $REASON"
              ;;
          esac

          gh pr comment "${{ github.event.pull_request.number }}" --body "$MESSAGE"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-auto-merge:
    runs-on: ubuntu-latest
    needs: auto-merge
    if: always() && github.actor == 'dependabot[bot]'
    steps:
      - name: Notify Slack about auto-merge
        if: needs.auto-merge.result == 'success'
        uses: slackapi/slack-github-action@v2.0.0
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL_ID }}",
              "text": "ü§ñ Auto-merged dependency update",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "ü§ñ *Auto-merged dependency update*\n\n*PR:* <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>\n*Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>"
                  }
                }
              ]
            }
