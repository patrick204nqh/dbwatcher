<div x-data="sessionViewer(<%= @session.to_h.to_json %>)" class="space-y-6">
  <div class="flex justify-between items-center">
    <h2 class="text-2xl font-bold" x-text="session.name"></h2>
    <button @click="showFullRecords = !showFullRecords"
            class="bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded flex items-center gap-2">
      <span x-text="showFullRecords ? 'Show Changes Only' : 'Show Full Records'"></span>
    </button>
  </div>

  <!-- Summary -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-semibold mb-4">Summary</h3>
    <div class="grid grid-cols-3 gap-4">
      <template x-for="[key, count] in Object.entries(session.summary)" :key="key">
        <div class="text-sm">
          <span x-text="key.split(',')[0]" class="font-medium"></span>
          <span x-text="key.split(',')[1]" :class="getOperationColor(key.split(',')[1])"></span>:
          <span x-text="count"></span>
        </div>
      </template>
    </div>
  </div>

  <!-- Changes by Table -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-semibold mb-4">Database Changes</h3>

    <div class="space-y-2">
      <template x-for="table in groupedChanges" :key="table.name">
        <div class="border rounded">
          <button @click="table.expanded = !table.expanded"
                  class="w-full px-4 py-3 flex items-center justify-between hover:bg-gray-50">
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4 transition-transform" :class="{'rotate-90': table.expanded}" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
              <span class="font-medium" x-text="table.name"></span>
              <span class="text-sm text-gray-500" x-text="`(${table.changes.length} changes)`"></span>
            </div>
          </button>

          <div x-show="table.expanded" x-collapse class="border-t">
            <template x-for="record in table.records" :key="record.id">
              <div class="border-b last:border-0">
                <button @click="record.expanded = !record.expanded"
                        class="w-full px-6 py-2 flex items-center gap-2 hover:bg-gray-50 text-left">
                  <svg class="w-4 h-4 transition-transform" :class="{'rotate-90': record.expanded}" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                  </svg>
                  <span x-text="`Record #${record.id}`"></span>
                </button>

                <div x-show="record.expanded" x-collapse class="px-8 pb-4">
                  <template x-for="change in record.changes" :key="change.timestamp">
                    <div class="mt-3">
                      <div class="font-medium mb-2" :class="getOperationColor(change.operation)">
                        <span x-text="change.operation"></span> at
                        <span x-text="new Date(change.timestamp).toLocaleTimeString()"></span>
                      </div>

                      <div x-show="!showFullRecords" class="space-y-1">
                        <template x-for="col in change.changes" :key="col.column">
                          <div class="text-sm">
                            <span class="font-medium" x-text="col.column + ':'"></span>
                            <template x-if="col.old_value">
                              <span>
                                <span class="text-red-600 line-through" x-text="col.old_value"></span>
                                <span class="mx-1">â†’</span>
                              </span>
                            </template>
                            <span class="text-green-600" x-text="col.new_value || 'null'"></span>
                          </div>
                        </template>
                      </div>

                      <div x-show="showFullRecords" class="bg-gray-50 p-3 rounded text-sm font-mono">
                        <pre x-text="JSON.stringify(change.record_snapshot, null, 2)"></pre>
                      </div>
                    </div>
                  </template>
                </div>
              </div>
            </template>
          </div>
        </div>
      </template>
    </div>
  </div>
</div>

<script>
function sessionViewer(sessionData) {
  return {
    session: sessionData,
    showFullRecords: false,
    groupedChanges: [],

    init() {
      // Calculate summary from changes
      const summary = {};
      this.session.changes.forEach(change => {
        const key = `${change.table_name},${change.operation}`;
        summary[key] = (summary[key] || 0) + 1;
      });
      this.session.summary = summary;

      // Group changes by table and record
      const tables = {};

      this.session.changes.forEach(change => {
        if (!tables[change.table_name]) {
          tables[change.table_name] = {
            name: change.table_name,
            expanded: false,
            changes: [],
            records: {}
          };
        }

        tables[change.table_name].changes.push(change);

        if (!tables[change.table_name].records[change.record_id]) {
          tables[change.table_name].records[change.record_id] = {
            id: change.record_id,
            expanded: false,
            changes: []
          };
        }

        tables[change.table_name].records[change.record_id].changes.push(change);
      });

      // Convert to array format
      this.groupedChanges = Object.values(tables).map(table => ({
        ...table,
        records: Object.values(table.records)
      }));
    },

    getOperationColor(operation) {
      const colors = {
        'INSERT': 'text-green-600',
        'UPDATE': 'text-blue-600',
        'DELETE': 'text-red-600'
      };
      return colors[operation] || 'text-gray-600';
    }
  };
}
</script>
