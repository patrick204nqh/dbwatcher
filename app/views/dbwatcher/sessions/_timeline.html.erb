<%# Timeline View - Simple chronological list of changes %>
<div class="h-full"
     x-data="DBWatcher.getComponent('timeline', { sessionId: '<%= @session.id %>' })"
     x-init="init()">

  <!-- Timeline Header -->
  <div class="p-3 border-b border-gray-300 bg-gray-50">
    <div class="flex items-center justify-between">
      <h3 class="text-sm font-medium text-gray-900">Timeline View</h3>
      <div class="flex items-center gap-3 text-xs">
        <template x-if="!loading && filteredData.length > 0">
          <span class="text-gray-600">
            <span x-text="filteredData.length"></span> operations
            <template x-if="filteredData.length !== timelineData.length">
              <span x-text="`of ${timelineData.length} total`"></span>
            </template>
          </span>
        </template>
      </div>
    </div>
  </div>

  <!-- Loading State -->
  <div x-show="loading" class="flex items-center justify-center h-64">
    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-medium"></div>
    <span class="ml-2 text-gray-600">Loading timeline...</span>
  </div>

  <!-- Error State -->
  <div x-show="error" class="p-4 bg-red-50 border border-red-200 rounded m-4">
    <p class="text-red-700" x-text="error"></p>
    <button @click="loadTimelineData()" class="mt-2 text-red-600 hover:text-red-800 underline">Retry</button>
  </div>

  <!-- Timeline Content -->
  <div x-show="!loading && !error" class="h-full flex">
    <!-- Sidebar Filters -->
    <div class="w-64 bg-gray-50 border-r border-gray-200 p-3 overflow-auto">
      <!-- Table Filter -->
      <div class="mb-4">
        <h4 class="text-sm font-medium text-gray-900 mb-2">Filter by Tables</h4>

        <!-- Select All / Clear All -->
        <div class="mb-2 flex gap-2">
          <button @click="filters.tables = getAvailableTables(); applyFilters()"
                  class="text-xs text-blue-medium hover:text-navy-dark underline"
                  :disabled="loading">
            Select All
          </button>
          <button @click="clearFilters()"
                  class="text-xs text-blue-medium hover:text-navy-dark underline"
                  :disabled="loading">
            Clear All
          </button>
        </div>

        <!-- Search tables -->
        <input type="text"
               x-model="tableSearch"
               placeholder="Search tables..."
               class="w-full px-2 py-1 mb-2 border border-gray-300 rounded text-xs">

        <!-- Tables list with max height and scrolling -->
        <div class="max-h-32 overflow-y-auto space-y-1 border border-gray-200 rounded p-2 bg-white">
          <template x-for="table in getAvailableTables().filter(t => !tableSearch || t.toLowerCase().includes(tableSearch.toLowerCase()))" :key="table">
            <label class="flex items-center gap-2 p-1 rounded hover:bg-gray-100 cursor-pointer">
              <input type="checkbox"
                     :value="table"
                     x-model="filters.tables"
                     @change="applyFilters()"
                     class="form-checkbox h-3 w-3 text-blue-medium">
              <span class="text-xs text-gray-700" x-text="table"></span>
            </label>
          </template>
        </div>

        <!-- Selected count -->
        <div class="mt-2 text-xs text-gray-500" x-show="filters.tables.length > 0">
          <span x-text="filters.tables.length"></span> table(s) selected
        </div>
      </div>

      <!-- Search -->
      <div class="mb-4">
        <h4 class="text-sm font-medium text-gray-900 mb-2">Search</h4>
        <input type="text"
               x-model="filters.searchText"
               @input="applyFilters()"
               placeholder="Table, operation, or record ID"
               class="w-full px-2 py-1 border border-gray-300 rounded text-sm">
      </div>

      <!-- Analytics Summary -->
      <template x-if="!loading && timelineData.length > 0">
        <div class="bg-white border border-gray-200 rounded p-3">
          <h4 class="text-sm font-medium text-gray-900 mb-3">Session Analytics</h4>
          <div class="space-y-2 text-xs">
            <div class="flex justify-between">
              <span class="text-gray-600">Operations:</span>
              <span class="font-medium" x-text="`${filteredData.length}/${timelineData.length}`"></span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Tables:</span>
              <span class="font-medium" x-text="getAvailableTables().length"></span>
            </div>
            <div class="flex justify-between">
              <span class="text-gray-600">Duration:</span>
              <span class="font-medium" x-text="metadata.session_duration || 'N/A'"></span>
            </div>

            <!-- Operation Counts -->
            <div class="mt-3 space-y-1">
              <template x-for="[operation, count] in Object.entries(metadata.operation_counts || {})" :key="operation">
                <div class="flex justify-between items-center">
                  <span class="badge badge-sm" :class="`badge-${operation.toLowerCase()}`" x-text="operation"></span>
                  <span class="text-xs font-medium" x-text="count"></span>
                </div>
              </template>
            </div>
          </div>
        </div>
      </template>
    </div>

    <!-- Main Timeline Content -->
    <div class="flex-1 overflow-auto">
      <!-- Empty State -->
      <div x-show="filteredData.length === 0" class="flex flex-col items-center justify-center h-64">
        <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
        <p class="mt-2 text-gray-500">No operations found for the current filters</p>
        <button @click="clearFilters()" class="mt-2 text-blue-medium hover:text-navy-dark underline">Clear filters</button>
      </div>

      <!-- Operations List -->
      <template x-if="filteredData.length > 0">
        <div class="divide-y divide-gray-200">
          <template x-for="operation in filteredData" :key="operation.id">
            <div class="transition-colors" x-data="{ expanded: false }">
              <!-- Main Operation Row (Clickable) -->
              <div class="p-4 hover:bg-gray-50 cursor-pointer" @click="expanded = !expanded">
                <div class="flex items-start justify-between">
                  <!-- Operation Info -->
                  <div class="flex items-start gap-3 flex-1">
                    <div class="flex-1 min-w-0">
                      <div class="flex items-center gap-2 mb-1 flex-wrap">
                        <span class="badge badge-sm flex-shrink-0" :class="`badge-${operation.operation.toLowerCase()}`" x-text="operation.operation"></span>
                        <span class="text-sm font-medium text-gray-900 truncate" x-text="operation.table_name"></span>
                        <span x-show="operation.record_id" class="text-xs text-gray-500 flex-shrink-0">
                          ID: <span x-text="operation.record_id"></span>
                        </span>
                      </div>
                      <div class="text-xs text-gray-500">
                        <span x-text="formatTimestamp(operation.timestamp)"></span>
                        <span class="ml-2">â€¢</span>
                        <span class="ml-2" x-text="formatRelativeTime(operation)"></span>
                      </div>

                      <!-- Changes Preview (if any) -->
                      <template x-if="operation.changes && Object.keys(operation.changes).length > 0 && !expanded">
                        <div class="mt-2 text-xs">
                          <span class="text-gray-400">Changes:</span>
                          <span class="text-gray-600" x-text="Object.keys(operation.changes).slice(0, 3).join(', ') + (Object.keys(operation.changes).length > 3 ? '...' : '')"></span>
                        </div>
                      </template>
                    </div>
                  </div>

                  <!-- Expand/Collapse Icon and Sequence -->
                  <div class="flex items-center gap-2 ml-4 flex-shrink-0">
                    <div class="text-xs text-gray-400">
                      #<span x-text="operation.sequence + 1"></span>
                    </div>
                    <svg class="w-4 h-4 text-gray-400 transition-transform" :class="{ 'rotate-180': expanded }" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                  </div>
                </div>
              </div>

              <!-- Expanded Details -->
              <div x-show="expanded" x-collapse class="bg-gray-50 border-t border-gray-200">
                <div class="p-4 pl-10">
                  <!-- Operation Details -->
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm mb-4">
                    <div>
                      <span class="font-medium text-gray-700">Table:</span>
                      <span class="ml-2 text-gray-900" x-text="operation.table_name"></span>
                    </div>
                    <div>
                      <span class="font-medium text-gray-700">Operation:</span>
                      <span class="ml-2 badge badge-sm" :class="`badge-${operation.operation.toLowerCase()}`" x-text="operation.operation"></span>
                    </div>
                    <div x-show="operation.record_id">
                      <span class="font-medium text-gray-700">Record ID:</span>
                      <span class="ml-2 text-gray-900" x-text="operation.record_id"></span>
                    </div>
                    <div>
                      <span class="font-medium text-gray-700">Timestamp:</span>
                      <span class="ml-2 text-gray-900" x-text="formatTimestamp(operation.timestamp)"></span>
                    </div>
                    <div>
                      <span class="font-medium text-gray-700">Relative Time:</span>
                      <span class="ml-2 text-gray-900" x-text="formatRelativeTime(operation)"></span>
                    </div>
                    <div>
                      <span class="font-medium text-gray-700">Sequence:</span>
                      <span class="ml-2 text-gray-900" x-text="operation.sequence + 1"></span>
                    </div>
                  </div>

                  <!-- Changes Details -->
                  <template x-if="operation.changes && Object.keys(operation.changes).length > 0">
                    <div class="mt-4">
                      <h5 class="font-medium text-gray-700 mb-2">Changes:</h5>
                      <div class="bg-white border border-gray-200 rounded p-3 text-xs overflow-auto max-h-32">
                        <template x-for="[field, change] in Object.entries(operation.changes)" :key="field">
                          <div class="mb-2 last:mb-0">
                            <span class="font-medium text-gray-700" x-text="field"></span>:
                            <template x-if="change.from !== undefined">
                              <span>
                                <span class="text-red-600" x-text="change.from"></span>
                                â†’
                                <span class="text-green-600" x-text="change.to"></span>
                              </span>
                            </template>
                            <template x-if="change.from === undefined">
                              <span class="text-green-600" x-text="change.to || change"></span>
                            </template>
                          </div>
                        </template>
                      </div>
                    </div>
                  </template>

                  <!-- Metadata -->
                  <template x-if="operation.metadata && Object.keys(operation.metadata).length > 0">
                    <div class="mt-4">
                      <h5 class="font-medium text-gray-700 mb-2">Metadata:</h5>
                      <div class="grid grid-cols-1 md:grid-cols-2 gap-2 text-xs">
                        <template x-for="[key, value] in Object.entries(operation.metadata).filter(([k, v]) => v !== null && v !== undefined)" :key="key">
                          <div>
                            <span class="font-medium text-gray-600 capitalize" x-text="key.replace('_', ' ')"></span>:
                            <span class="ml-1 text-gray-900" x-text="value"></span>
                          </div>
                        </template>
                      </div>
                    </div>
                  </template>
                </div>
              </div>
            </div>
          </template>
        </div>
      </template>
    </div>
  </div>

</div>
