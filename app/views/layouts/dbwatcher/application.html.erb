<!DOCTYPE html>
<html>
  <head>
    <title>DB Watcher</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>

    <!-- Alpine.js and Plugins - ensure plugins load BEFORE Alpine.js core -->
    <script defer src="https://unpkg.com/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>

    <!-- Mermaid.js for database diagrams -->
    <script src="https://cdn.jsdelivr.net/npm/mermaid@10.6.1/dist/mermaid.min.js" crossorigin="anonymous"></script>

    <!-- SVG Pan Zoom Library -->
    <script src="https://cdn.jsdelivr.net/npm/svg-pan-zoom@3.6.1/dist/svg-pan-zoom.min.js"></script>

    <!-- Tabulator.js for table library -->
    <%= javascript_include_tag "dbwatcher/vendor/tabulator.min" %>
    <%= stylesheet_link_tag "dbwatcher/vendor/tabulator.min", media: "all" %>

    <!-- DBWatcher Core Architecture -->
    <%= javascript_include_tag "dbwatcher/vendor/lodash.min" %>
    <%= javascript_include_tag "dbwatcher/vendor/date-fns-browser" %>
    <%= javascript_include_tag "dbwatcher/dbwatcher" %>
    <%= javascript_include_tag "dbwatcher/core/component_registry" %>
    <%= javascript_include_tag "dbwatcher/core/component_loader" %>
    <%= javascript_include_tag "dbwatcher/components/base" %>
    <%= javascript_include_tag "dbwatcher/components/changes_table_hybrid" %>
    <%= javascript_include_tag "dbwatcher/components/diagrams" %>
    <%= javascript_include_tag "dbwatcher/components/summary" %>

    <!-- DBWatcher Services -->
    <%= javascript_include_tag "dbwatcher/core/alpine_store" %>
    <%= javascript_include_tag "dbwatcher/core/api_client" %>
    <%= javascript_include_tag "dbwatcher/services/mermaid" %>

    <!-- Alpine.js Component Registrations -->
    <%= javascript_include_tag "dbwatcher/alpine_registrations" %>

    <!-- Auto-initialization -->
    <%= javascript_include_tag "dbwatcher/auto_init" %>

    <script>
      // Initialize DBWatcher before Alpine.js starts
      document.addEventListener('alpine:init', () => {
        try {
          if (window.DBWatcher) {
            DBWatcher.init();
            console.log('✅ DBWatcher initialized with optimized architecture');
          } else {
            console.error('❌ DBWatcher not loaded');
          }
        } catch (error) {
          console.error('❌ Error during DBWatcher initialization:', error);
        }
      });

      // Fallback initialization with better error handling
      document.addEventListener('DOMContentLoaded', function() {
        // Small delay to ensure Alpine is available
        setTimeout(() => {
          try {
            if (window.DBWatcher && !DBWatcher.initialized) {
              DBWatcher.init();
              console.log('✅ DBWatcher initialized (fallback)');
            }
          } catch (error) {
            console.error('❌ Error during DBWatcher fallback initialization:', error);
          }
        }, 100);

        // Plugin verification
        setTimeout(() => {
          if (window.Alpine && !window.Alpine.directive('collapse')) {
            console.warn('⚠️ Alpine.js Collapse plugin may not be properly loaded');
          } else if (window.Alpine && window.Alpine.directive('collapse')) {
            console.log('✅ Alpine.js Collapse plugin verified');
          }
        }, 200);
      });
    </script>

    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- DBWatcher Styles -->
    <%= stylesheet_link_tag 'dbwatcher/application.css', 'data-turbolinks-track': 'reload' %>

    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              'navy-dark': '#00285D',
              'blue-light': '#96C1E7',
              'blue-medium': '#6CADDF',
              'gold-dark': '#D4A11E',
              'gold-light': '#FFC758',
            }
          }
        }
      }
    </script>
  </head>

  <body class="bg-gray-50 h-screen overflow-hidden text-gray-800">
    <div class="flex h-full" x-data="{ sidebarWidth: 200, sidebarCollapsed: false }">
      <!-- Compact Sidebar -->
      <aside class="bg-gray-900 text-gray-300 flex-shrink-0 transition-all duration-200"
             :style="{ width: sidebarCollapsed ? '48px' : sidebarWidth + 'px' }">
        <div class="flex flex-col h-full">
          <!-- Logo -->
          <div class="h-10 flex items-center justify-between px-3 border-b border-gray-700">
            <div class="flex items-center gap-2" x-show="!sidebarCollapsed">
              <svg class="w-5 h-5 text-gold-light" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
              </svg>
              <span class="text-sm font-medium text-white">DB Watcher</span>
            </div>
            <button @click="sidebarCollapsed = !sidebarCollapsed"
                    class="p-1 hover:bg-gray-800 rounded text-gray-400">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      :d="sidebarCollapsed ? 'M13 5l7 7-7 7M5 5l7 7-7 7' : 'M11 19l-7-7 7-7m8 14l-7-7 7-7'"/>
              </svg>
            </button>
          </div>

          <!-- Navigation -->
          <nav class="flex-1 py-2 overflow-y-auto">
            <%= link_to root_path, class: "sidebar-item #{current_page?(root_path) ? 'active' : ''}" do %>
              <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"/>
              </svg>
              <span x-show="!sidebarCollapsed">Dashboard</span>
            <% end %>

            <%= link_to sessions_path, class: "sidebar-item #{current_page?(sessions_path) ? 'active' : ''}" do %>
              <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span x-show="!sidebarCollapsed">Sessions</span>
            <% end %>

            <%= link_to tables_path, class: "sidebar-item #{current_page?(tables_path) ? 'active' : ''}" do %>
              <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"/>
              </svg>
              <span x-show="!sidebarCollapsed">Tables</span>
            <% end %>

            <%= link_to queries_path, class: "sidebar-item #{current_page?(queries_path) ? 'active' : ''}" do %>
              <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
              </svg>
              <span x-show="!sidebarCollapsed">SQL Logs</span>
            <% end %>
          </nav>

          <!-- Actions -->
          <div class="p-2 border-t border-gray-700">
            <!-- Clear All Action -->
            <%= button_to clear_all_path,
                method: :delete,
                data: { confirm: "Clear all data?" },
                class: "sidebar-item w-full justify-center bg-red-900 hover:bg-red-800 text-red-200" do %>
              <svg class="w-4 h-4 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
              </svg>
              <span x-show="!sidebarCollapsed" class="text-xs">Clear All</span>
            <% end %>
          </div>
        </div>
      </aside>

      <!-- Splitter -->
      <div class="splitter" x-show="!sidebarCollapsed"
           @mousedown="startResize($event)"
           x-data="{
             startResize(e) {
               const startX = e.pageX;
               const startWidth = sidebarWidth;

               const doDrag = (e) => {
                 sidebarWidth = Math.max(150, Math.min(400, startWidth + e.pageX - startX));
               };

               const stopDrag = () => {
                 document.removeEventListener('mousemove', doDrag);
                 document.removeEventListener('mouseup', stopDrag);
               };

               document.addEventListener('mousemove', doDrag);
               document.addEventListener('mouseup', stopDrag);
             }
           }">
      </div>

      <!-- Main Content -->
      <main class="flex-1 overflow-hidden bg-white">
        <%= yield %>
      </main>
    </div>

    <!-- Initialize DBWatcher system -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        // Initialize DBWatcher if available
        if (window.DBWatcher) {
          // Ensure BaseComponent is available
          if (!window.DBWatcher.BaseComponent && typeof DBWatcher.BaseComponent !== 'function') {
            window.DBWatcher.BaseComponent = function(config = {}) {
              return {
                init() {
                  if (this.componentInit) {
                    try {
                      this.componentInit();
                    } catch (error) {
                      console.error("Error during component initialization:", error);
                    }
                  }
                }
              };
            };
            console.log('Added fallback BaseComponent');
          }

          // Register legacy components with Alpine directly if ComponentRegistry isn't available
          if (!window.DBWatcher.ComponentRegistry) {
            console.log('ComponentRegistry not available, using direct Alpine registration');

            // Ensure Alpine is available
            if (window.Alpine) {
              // Direct registration of components with Alpine
              if (!window.Alpine.data('changesTable') && window.DBWatcher.components && window.DBWatcher.components.changesTable) {
                window.Alpine.data('changesTable', (config = {}) => {
                  const component = window.DBWatcher.components.changesTable(config);
                  return component;
                });
                console.log('Registered changesTable component with Alpine');
              }
            }
          }

          console.log('✅ DBWatcher initialized (fallback)');
        }

        // Verify Alpine.js plugins
        if (window.Alpine && window.Alpine.directive && window.Alpine.directive('collapse')) {
          console.log('✅ Alpine.js Collapse plugin verified');
        }
      });
    </script>
  </body>
</html>
